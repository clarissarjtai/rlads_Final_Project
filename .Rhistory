knitr::opts_chunk$set(echo = FALSE)
temp_p = ggplot(data = plt_df_cvaw_covid)+
geom_point(aes(x = Valence_Avg, y = Arousal_Avg, color = Date), size = 0.1)+
theme_bw() +
labs(title = "Covid-19 版中 valence 對 arousal 的散布圖")
library(htmlwidgets)
library(webshot)
library(dplyr)
library(pracma)
library(ggplot2)
library(plotly)
library(dygraphs)
library(xts)
library(caret)
library(tidyr)
# library(ggpmisc)
temp_p = ggplot(data = plt_df_cvaw_covid)+
geom_point(aes(x = Valence_Avg, y = Arousal_Avg, color = Date), size = 0.1)+
theme_bw() +
labs(title = "Covid-19 版中 valence 對 arousal 的散布圖")
ggplotly(temp_p)
temp_p = ggplot(data = plt_df_cvaw_covid)+
geom_point(aes(x = Valence_Sum, y = Arousal_Sum, color = Date), size = 0.1)+
theme_bw() +
labs(title = "Covid-19 版中 valence 對 arousal 的散布圖")+
ggplotly(temp_p)
knitr::opts_chunk$set(echo = FALSE)
library(htmlwidgets)
library(webshot)
library(dplyr)
library(pracma)
library(ggplot2)
library(plotly)
library(dygraphs)
library(xts)
library(caret)
library(tidyr)
# library(ggpmisc)
# covid-19板對新增人數變動率
temp_p = ggplot()+
geom_hline(yintercept = 0) +
geom_point(data = plt_df_cvaw_covid, aes(x = Date , y = score_avg), color = ifelse(plt_df_cvaw_covid$score_avg >= 0, "pink", "lightgreen"), size = 1)+
geom_line(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5), color = "darkgray") +
geom_point(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5),
color = ifelse(TAIEX_COVID_df$日新增案例變動率 >= 0, "red", "darkgreen"),
size = abs(TAIEX_COVID_df$日新增案例變動率)*3) +
theme_bw() +
labs(title = "Covid-19 版情緒分析-對新增病例變動率")
## 台股
# 大盤
TAIEX_COVID_df <- as_tibble(readr::read_csv("../rlads_Final_Project/data/stock/TAIEX-COVID.csv")) %>%
mutate(Date = as.Date(X1)) %>%
select(-X1) %>%
filter(between(Date, as.Date("2021-04-01"), as.Date("2021-05-31")))
# 類股
TAIEX_df <- as_tibble(readr::read_csv("../rlads_Final_Project/data/stock/TAIEX.csv")) %>%
select(-X1) %>%
mutate(Date = as.Date(Date)) %>%
filter(between(Date, as.Date("2021-04-01"), as.Date("2021-05-31")))
# 類股變動率
TAIEX_ROC_df <- as_tibble(readr::read_csv("../rlads_Final_Project/data/stock/TAIEX_ROC.csv")) %>%
select(-X1) %>%
mutate(Date = as.Date(Date)) %>%
filter(between(Date, as.Date("2021-04-01"), as.Date("2021-05-31")))
# covid板
plt_df_cvaw_covid <- as_tibble(readr::read_csv("../rlads_Final_Project/data/cvaw/cvaw_covid.csv")) %>%
mutate(Date = as.Date(Date)) %>%
filter(between(Date, as.Date("2021-04-01"), as.Date("2021-05-31"))) %>%
mutate(score_sum = round(Valence_Sum * (Arousal_Sum + words_Num * 5), 6),
score_avg = if_else(score_sum == 0, 0, round(score_sum / ((words_Num)** 2), 6)))
# stock板
plt_df_cvaw_stock <- as_tibble(readr::read_csv("../rlads_Final_Project/data/cvaw/cvaw_stock.csv")) %>%
mutate(Date = as.Date(Date)) %>%
filter(between(Date, as.Date("2021-04-01"), as.Date("2021-05-31"))) %>%
mutate(score_sum = round(Valence_Sum * (Arousal_Sum + words_Num * 5), 6),
score_avg = if_else(score_sum == 0, 0, round(score_sum / ((words_Num)** 2), 6)))
## 計算每天各版平均情緒分數
# covid板
group_plt_df_cvaw_covid <- plt_df_cvaw_covid %>%
group_by(Date) %>%
summarise(score_sum_date = mean(score_sum), score_avg_date = mean(score_avg)) %>%
ungroup()
# stock板
group_plt_df_cvaw_stock <- plt_df_cvaw_stock %>%
group_by(Date) %>%
summarise(score_sum_date = mean(score_sum), score_avg_date = mean(score_avg)) %>%
ungroup()
# covid-19板對新增人數變動率
temp_p = ggplot()+
geom_hline(yintercept = 0) +
geom_point(data = plt_df_cvaw_covid, aes(x = Date , y = score_avg), color = ifelse(plt_df_cvaw_covid$score_avg >= 0, "pink", "lightgreen"), size = 1)+
geom_line(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5), color = "darkgray") +
geom_point(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5),
color = ifelse(TAIEX_COVID_df$日新增案例變動率 >= 0, "red", "darkgreen"),
size = abs(TAIEX_COVID_df$日新增案例變動率)*3) +
theme_bw() +
labs(title = "Covid-19 版情緒分析-對新增病例變動率")
ggplotly(temp_p)
# covid-19板對新增人數變動率
temp_p = ggplot()+
geom_hline(yintercept = 0) +
geom_point(data = plt_df_cvaw_covid, aes(x = Date , y = score_avg), color = ifelse(plt_df_cvaw_covid$score_avg >= 0, "pink", "lightgreen"), size = 0.7)+
geom_line(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5), color = "darkgray") +
geom_point(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5),
color = ifelse(TAIEX_COVID_df$日新增案例變動率 >= 0, "red", "darkgreen"),
size = abs(TAIEX_COVID_df$日新增案例變動率)*3) +
theme_bw() +
labs(title = "Covid-19 版情緒分析-對新增病例變動率")
ggplotly(temp_p)
# covid-19板對新增人數變動率
temp_p = ggplot()+
geom_hline(yintercept = 0) +
geom_point(data = plt_df_cvaw_covid, aes(x = Date , y = score_avg), color = ifelse(plt_df_cvaw_covid$score_avg >= 0, "pink", "lightgreen"), size = 0.5)+
geom_line(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5), color = "darkgray") +
geom_point(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5),
color = ifelse(TAIEX_COVID_df$日新增案例變動率 >= 0, "red", "darkgreen"),
size = abs(TAIEX_COVID_df$日新增案例變動率)*3) +
theme_bw() +
labs(title = "Covid-19 版情緒分析-對新增病例變動率")
ggplotly(temp_p)
# stock板對新增人數變動率
temp_p =ggplot()+
geom_hline(yintercept = 0) +
geom_point(data = plt_df_cvaw_stock, aes(x = Date, y = score_avg), color = ifelse(plt_df_cvaw_stock$score_avg >= 0, "pink", "lightgreen"), size = 1)+
geom_line(data = group_plt_df_cvaw_stock, aes(x = Date, y = score_avg_date*10), color = "darkgray") +
geom_point(data = group_plt_df_cvaw_stock, aes(x = Date, y = score_avg_date*10),
color = ifelse(TAIEX_COVID_df$日新增案例變動率 >= 0, "red", "darkgreen"),
size = abs(TAIEX_COVID_df$日新增案例變動率) * 3) +
theme_bw() +
labs(title = "Stock 版情緒分析-對新增病例變動率")
ggplotly(temp_p)
# covid-19板對新增人數變動率
temp_p = ggplot()+
geom_hline(yintercept = 0) +
geom_point(data = plt_df_cvaw_covid, aes(x = Date , y = score_avg), color = ifelse(plt_df_cvaw_covid$score_avg >= 0, "pink", "lightgreen"), size = 0.6)+
geom_line(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5), color = "darkgray") +
geom_point(data = group_plt_df_cvaw_covid, aes(x = Date, y = score_avg_date*5),
color = ifelse(TAIEX_COVID_df$日新增案例變動率 >= 0, "red", "darkgreen"),
size = abs(TAIEX_COVID_df$日新增案例變動率)*3) +
theme_bw() +
labs(title = "Covid-19 版情緒分析-對新增病例變動率")
ggplotly(temp_p)
